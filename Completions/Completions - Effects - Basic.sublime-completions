{
   "scope": "text.pdx",

   "completions":
   [
        {
        	"trigger": "random",
        	"contents": "random = {\n\tchance = ${1:<value>}\n\t${2:}\n}",
        	"annotation": "Effect",
        	"kind": ["function", "E", "All"],
        	"details": "A random chance for an effect to happen.",
        },
        {
        	"trigger": "random_list",
        	"contents": "random_list = {\n\t50 = {\n\t\t${1:}\n\t}\n\t50 = {\n\t\t${2:}\n\t}\n}",
        	"annotation": "Effect",
        	"kind": ["function", "E", "All"],
        	"details": "A list of things where one will happen.",
        },
        {
        	"trigger": "if",
        	"contents": "if = {\n\tlimit = {\n\t\t${1:}\n\t}\n\t${2:}\n}\n",
        	"annotation": "Effect",
        	"kind": ["function", "E", "All"],
        	"details": "Executes effects if limit criteria are met.",
        },
        {
        	"trigger": "if/else",
        	"contents": "if = {\n\tlimit = {\n\t\t${1:}\n\t}\n\t${2:}\n}\nelse = {\n\t${3:}\n}\n",
        	"annotation": "Effect",
        	"kind": ["function", "E", "All"],
        	"details": "Executes effects if limit criteria are met, if not it will execute the else block.",
        },
        {
        	"trigger": "if/else_if",
        	"contents": "if = {\n\tlimit = {\n\t\t${1:}\n\t}\n\t${2:}\n}\nelse_if = {\n\tlimit = {\n\t\t${3:}\n\t}\n\t${4:}\n}\n",
        	"annotation": "Effect",
        	"kind": ["function", "E", "All"],
        	"details": "Executes effects if limit criteria are met for if/else_if blocks.",
        },
        {
        	"trigger": "if/else_if/else",
        	"contents": "if = {\n\tlimit = {\n\t\t${1:}\n\t}\n\t${2:}\n}\nelse_if = {\n\tlimit = {\n\t\t${3:}\n\t}\n\t${4:}\n}\nelse = {\n\t${5:}\n}\n",
        	"annotation": "Effect",
        	"kind": ["function", "E", "All"],
        	"details": "Execute effects if limit criteria are met for if/else_if, else execute the else block.",
        },
        {
        	"trigger": "while (limit)",
        	"contents": "while = {\n\tlimit = {\n\t\t${1:}\n\t}\n\t${2:}\n}\n",
        	"annotation": "Effect",
        	"kind": ["function", "E", "All"],
        	"details": "Repeats enclosed effects while limit criteria are met.",
        },
        {
        	"trigger": "while (count)",
        	"contents": "while = {\n\tcount = ${1:}\n\t${2:}\n}\n",
        	"annotation": "Effect",
        	"kind": ["function", "E", "All"],
        	"details": "Repeats enclosed effects until set iteration is reached.",
        },
        {
        	"trigger": "assert_if",
        	"contents": "assert_if = {\n\tlimit = {\n\t\t${1:}\n\t}\n\ttext = ${2:<text>}\n}\n",
        	"annotation": "Effect",
        	"kind": ["function", "E", "All"],
        	"details": "Conditionally cause an assert during run time.",
        },
        {
        	"trigger": "assert_read",
        	"contents": "assert_read = ${1:<text/yes>}\n",
        	"annotation": "Effect",
        	"kind": ["function", "E", "All"],
        	"details": "Conditionally cause an assert during read time.",
        },
        {
        	"trigger": "hidden_effect",
        	"contents": "hidden_effect = {\n\t${1:}\n}\n",
        	"annotation": "Effect",
        	"kind": ["function", "E", "All"],
        	"details": "Effect not shown in tooltips.",
        },
        {
        	"trigger": "hidden_effect_new_object",
        	"contents": "hidden_effect_new_object = {\n\t${1:}\n}\n",
        	"annotation": "Effect",
        	"kind": ["function", "E", "All"],
        	"details": "Suppress errors for effects using to-be created objects (like artifacts or characters) in tooltips.",
        },
        {
        	"trigger": "save_scope_as",
        	"contents": "save_scope_as = ${1:<scope>}\n",
        	"annotation": "Effect",
        	"kind": ["function", "E", "All"],
        	"details": "Saves the current scope.",
        },
        {
        	"trigger": "save_temporary_scope_as",
        	"contents": "save_temporary_scope_as = ${1:<scope>}\n",
        	"annotation": "Effect",
        	"kind": ["function", "E", "All"],
        	"details": "Saves the current scope to be referenced later in the same effect.",
        },
        {
        	"trigger": "show_as_tooltip",
        	"contents": "show_as_tooltip = {\n\t${1:}\n}\n",
        	"annotation": "Effect",
        	"kind": ["function", "E", "All"],
        	"details": "Effect only shown in tooltips (but not executed).",
        },
        {
        	"trigger": "switch",
        	"contents": "switch = {\n\ttrigger = ${1:<trigger>}\n\t${2:<trigger_1>} = {\n\t\t\n\t}\n\t${3:<trigger_2>} = {\n\t\t\n\t}\n\tfallback = {\n\t\t\n\t}\n}\n",
        	"annotation": "Effect",
        	"kind": ["function", "E", "All"],
        	"details": "Switch on a trigger for the evaluation of another trigger with an optional fallback trigger.",
        },
        {
        	"trigger": "trigger_event (event_id)",
        	"contents": "trigger_event = {\n\tid = ${1:<event_id>}\n\t${2:<days/weeks/months/years>} = ${3:<value>}\n}\n",
        	"annotation": "Effect",
        	"kind": ["function", "E", "All"],
        	"details": "triggers an event.",
        },
        {
        	"trigger": "trigger_event (on_action)",
        	"contents": "trigger_event = {\n\ton_action = ${1:<on_action>}\n\t${2:<days/weeks/months/years>} = ${3:<value>}\n}\n",
        	"annotation": "Effect",
        	"kind": ["function", "E", "All"],
        	"details": "triggers an on_action.",
        },
   ]
}
