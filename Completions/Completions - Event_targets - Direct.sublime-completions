{
   "scope": "text.pdx",

   "completions":
   [
        {
        	"trigger": "accolade_type",
        	"contents": "accolade_type:${1:<accolade_type>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Accolade Type"],
        	"details": "Get the accolade_type with the specified key.",
        },
        {
        	"trigger": "activity_type",
        	"contents": "activity_type:${1:<activity_type>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Activity Type"],
        	"details": "Get the activity_type with the specified key.",
        },
        {
        	"trigger": "character",
        	"contents": "character:${1:<character_id>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Character"],
        	"details": "Global link to historical character scope of the given character string.",
        },
        {
        	"trigger": "culture",
        	"contents": "culture:${1:<culture_id>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Culture"],
        	"details": "Global link to culture scope of given culture string.",
        },
        {
        	"trigger": "culture_pillar",
        	"contents": "culture_pillar:${1:<culture_pillar>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Culture Pillar"],
        	"details": "Get the culture pillar with the specified key.",
        },
        {
        	"trigger": "culture_tradition",
        	"contents": "culture_tradition:${1:<culture_tradition>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Culture Tradition"],
        	"details": "Get the culture tradition with the specified key.",
        },
        {
        	"trigger": "decision",
        	"contents": "decision:${1:<decision>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Decision"],
        	"details": "Get the decision with the specified key.",
        },
        {
        	"trigger": "define",
        	"contents": "define:${1:<namespace>}|${2:<name>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Value"],
        	"details": "Reference the value of a numeric define.",
        },
        {
        	"trigger": "doctrine",
        	"contents": "doctrine:${1:<doctrine>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Doctrine"],
        	"details": "Get the doctrine with the specified key.",
        },
        {
        	"trigger": "dynasty",
        	"contents": "dynasty:${1:<dynasty_id>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Dynasty"],
        	"details": "Link to dynasty scope of the given dynasty string.",
        },
        {
        	"trigger": "event_id",
        	"contents": "event_id:${1:<event_id>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Flag"],
        	"details": "Global link to event scope of the given event id.",
        },
        {
        	"trigger": "faith",
        	"contents": "faith:${1:<faith>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Faith"],
        	"details": "Global link to faith scope of given faith string.",
        },
        {
        	"trigger": "flag",
        	"contents": "flag:${1:<flag>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Flag"],
        	"details": "Flag literals, e.g flag:<flag>.",
        },
        {
        	"trigger": "global_var",
        	"contents": "global_var:${1:<variable>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Value"],
        	"details": "Reference a previous set global variable via its name.",
        },
        {
        	"trigger": "government_type",
        	"contents": "government_type:${1:<goverment_type>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Government Type"],
        	"details": "Get the government_type with the specified key.",
        },
        {
        	"trigger": "house",
        	"contents": "house:${1:<house_id>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> House"],
        	"details": "Link to house scope of the given house string.",
        },
        {
        	"trigger": "local_var",
        	"contents": "local_var:${1:<variable>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Value"],
        	"details": "Reference a previous set local variable via its name.",
        },
        {
        	"trigger": "province",
        	"contents": "province:${1:<province_id>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Province"],
        	"details": "Directly scope to a specific province by its ID.",
        },
        {
        	"trigger": "religion",
        	"contents": "religion:${1:<religion>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Religion"],
        	"details": "Global link to religion scope of given religion string.",
        },
        {
        	"trigger": "scope",
        	"contents": "scope:${1:<scope>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All"],
        	"details": "Reference a previously saved scope via its name.",
        },
        {
        	"trigger": "special_guest",
        	"contents": "special_guest:${1:<type_key>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Character"],
        	"details": "Get the special guest of the given type key in the scoped activity.",
        },
        {
        	"trigger": "struggle",
        	"contents": "struggle:${1:<struggle>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Struggle"],
        	"details": "Global link to struggle of the given key.",
        },
        {
        	"trigger": "title",
        	"contents": "title:${1:<title_id>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Title"],
        	"details": "Global link to title scope of given landed title template string.",
        },
        {
        	"trigger": "trait",
        	"contents": "trait:${1:<trait>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Trait"],
        	"details": "Get the trait with the specified key.",
        },
        {
        	"trigger": "value",
        	"contents": "value:${1:<value>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Struggle"],
        	"details": "A numeric literal value.",
        },
        {
        	"trigger": "var",
        	"contents": "var:${1:<variable>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Value"],
        	"details": "Reference a previous set variable via its name.",
        },
        {
        	"trigger": "vassal_contract",
        	"contents": "vassal_contract:${1:<vassal_contract>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "All -> Vassal Contract"],
        	"details": "Get the vassal_contract with the specified key.",
        },
        {
        	"trigger": "aptitude",
        	"contents": "aptitude:${1:<court_position>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "Character -> Value"],
        	"details": "The aptitude of the provided court position type for the scoped character.",
        },
        {
        	"trigger": "court_position",
        	"contents": "court_position${1:<court_position>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "Character -> Character"],
        	"details": "The character currently employed in a specific court position.",
        },
        {
        	"trigger": "cp",
        	"contents": "cp${1:<court_position>}",
        	"annotation": "EventTarget",
        	"kind": ["markup", "S", "Character -> Character"],
        	"details": "Scope to the councillor of the given type.",
        },
   ]
}
